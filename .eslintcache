[{"F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\index.tsx":"1","F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\serviceWorkerRegistration.ts":"2","F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\reportWebVitals.ts":"3","F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\App.tsx":"4","F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\components\\board\\board.tsx":"5","F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\components\\tile\\tile.tsx":"6"},{"size":841,"mtime":1609015738492,"results":"7","hashOfConfig":"8"},{"size":5256,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1137,"mtime":1609125605789,"results":"11","hashOfConfig":"8"},{"size":3876,"mtime":1609096462367,"results":"12","hashOfConfig":"8"},{"size":477,"mtime":1609095304805,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1t8df1b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\index.tsx",[],["29","30"],"F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\serviceWorkerRegistration.ts",[],"F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\reportWebVitals.ts",[],"F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\App.tsx",["31","32","33","34"],"F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\components\\board\\board.tsx",["35","36","37","38"],"import React, { useEffect, useState } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./board.scss\";\r\nimport { threadId } from \"worker_threads\";\r\nimport { render } from \"@testing-library/react\";\r\nimport Tile from \"../tile/tile\";\r\n\r\n\r\nconst Board = () => {\r\n    const [boardValues, setBoardValues] = useState<boolean[][]>(createEmptyBoard());\r\n\r\n    function createEmptyBoard(): boolean[][] {\r\n        let board: boolean[][] = []\r\n\r\n        for (let y = 0; y < 5; y++) {\r\n            board![y] = [];\r\n            for (let x = 0; x < 5; x++) {\r\n                board![y][x] = false;\r\n            }\r\n        }\r\n        console.log(\"hit\");\r\n        return board;\r\n    }\r\n\r\n    function activateTile(y: number, x: number): void {\r\n        let board = boardValues;\r\n        board[y][x] = !board[y][x];\r\n        setBoardValues(board);\r\n        console.log(boardValues);\r\n    }\r\n\r\n\r\n    \r\n  return (\r\n    <div className=\"board-container\">\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <div onClick={() => activateTile(0,0)}><Tile active={boardValues[0][0]} color=\"blue\"/></div>\r\n            <div onClick={() => activateTile(0,1)}><Tile active={boardValues[0][1]} color=\"orange\"/></div>\r\n            <div onClick={() => activateTile(0,2)}><Tile active={boardValues[0][2]} color=\"red\"/></div>\r\n            <div onClick={() => activateTile(0,3)}><Tile active={boardValues[0][3]} color=\"black\"/></div>\r\n            <div onClick={() => activateTile(0,4)}><Tile active={boardValues[0][4]} color=\"teal\"/></div>\r\n          </tr>\r\n          <tr>\r\n            <div onClick={() => activateTile(1,0)}><Tile active={boardValues[1][0]} color=\"teal\"/></div>\r\n            <div onClick={() => activateTile(1,1)}><Tile active={boardValues[1][1]} color=\"blue\"/></div>\r\n            <div onClick={() => activateTile(1,2)}><Tile active={boardValues[1][2]} color=\"orange\"/></div>\r\n            <div onClick={() => activateTile(1,3)}><Tile active={boardValues[1][3]} color=\"red\"/></div>\r\n            <div onClick={() => activateTile(1,4)}><Tile active={boardValues[1][4]} color=\"black\"/></div>\r\n          </tr>\r\n          <tr>\r\n            <div onClick={() => activateTile(2,0)}><Tile active={boardValues[2][0]} color=\"black\"/></div>\r\n            <div onClick={() => activateTile(2,1)}><Tile active={boardValues[2][1]} color=\"teal\"/></div>\r\n            <div onClick={() => activateTile(2,2)}><Tile active={boardValues[2][2]} color=\"blue\"/></div>\r\n            <div onClick={() => activateTile(2,3)}><Tile active={boardValues[2][3]} color=\"orange\"/></div>\r\n            <div onClick={() => activateTile(2,4)}><Tile active={boardValues[2][4]} color=\"red\"/></div>\r\n          </tr>\r\n          <tr>\r\n            <div onClick={() => activateTile(3,0)}><Tile active={boardValues[3][0]} color=\"red\"/></div>\r\n            <div onClick={() => activateTile(3,1)}><Tile active={boardValues[3][1]} color=\"black\"/></div>\r\n            <div onClick={() => activateTile(3,2)}><Tile active={boardValues[3][2]} color=\"teal\"/></div>\r\n            <div onClick={() => activateTile(3,3)}><Tile active={boardValues[3][3]} color=\"blue\"/></div>\r\n            <div onClick={() => activateTile(3,4)}><Tile active={boardValues[3][4]} color=\"orange\"/></div>\r\n          </tr>\r\n          <tr>\r\n            <div onClick={() => activateTile(4,0)}><Tile active={boardValues[4][0]} color=\"orange\"/></div>\r\n            <div onClick={() => activateTile(4,1)}><Tile active={boardValues[4][1]} color=\"red\"/></div>\r\n            <div onClick={() => activateTile(4,2)}><Tile active={boardValues[4][2]} color=\"black\"/></div>\r\n            <div onClick={() => activateTile(4,3)}><Tile active={boardValues[4][3]} color=\"teal\"/></div>\r\n            <div onClick={() => activateTile(4,4)}><Tile active={boardValues[4][4]} color=\"blue\"/></div>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","F:\\Projects\\AzulCalculator\\azul-score-calculator\\src\\components\\tile\\tile.tsx",["39"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./tile.scss\";\r\n\r\ninterface TileProps {\r\n  color: string;\r\n  active: boolean;\r\n}\r\n\r\nconst Tile = (tileProps: TileProps) => {\r\n  const [placed, setPlaced] = useState(tileProps.active);\r\n\r\n  return (\r\n    <td\r\n      className={\r\n        placed\r\n          ? \"active \" + tileProps.color\r\n          : \"inactive \" + tileProps.color }\r\n      onClick={() => setPlaced(!placed)}>\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":17,"nodeType":"46","messageId":"47","endLine":6,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":8,"column":12,"nodeType":"46","messageId":"47","endLine":8,"endColumn":22},{"ruleId":"44","severity":1,"message":"49","line":12,"column":12,"nodeType":"46","messageId":"47","endLine":12,"endColumn":21},{"ruleId":"44","severity":1,"message":"50","line":16,"column":12,"nodeType":"46","messageId":"47","endLine":16,"endColumn":21},{"ruleId":"44","severity":1,"message":"51","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},{"ruleId":"44","severity":1,"message":"52","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":12},{"ruleId":"44","severity":1,"message":"53","line":4,"column":10,"nodeType":"46","messageId":"47","endLine":4,"endColumn":18},{"ruleId":"44","severity":1,"message":"54","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":16},{"ruleId":"44","severity":1,"message":"51","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'setScore' is assigned a value but never used.","Identifier","unusedVar","'roundScore' is defined but never used.","'gameScore' is defined but never used.","'startOver' is defined but never used.","'useEffect' is defined but never used.","'logo' is defined but never used.","'threadId' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]